"""Recreate quiz tables for QuizQuestion and QuizOption models

Revision ID: 118117834fd1
Revises: 9060e14c4e11
Create Date: 2025-09-21 00:16:21.077351

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '118117834fd1'
down_revision: Union[str, None] = '9060e14c4e11'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the old quiz_questions association table
    op.drop_table('quiz_questions')

    # Create the new quiz_questions table (for QuizQuestion model)
    op.create_table('quiz_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=True),
    sa.Column('pyq_id', sa.Integer(), nullable=True),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('correct_option_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['pyq_id'], ['pyqs.id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quiz_questions_id'), 'quiz_questions', ['id'], unique=False)

    # Create the quiz_options table
    op.create_table('quiz_options',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('option_text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['quiz_questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quiz_options_id'), 'quiz_options', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the new tables
    op.drop_index(op.f('ix_quiz_options_id'), table_name='quiz_options')
    op.drop_table('quiz_options')
    op.drop_index(op.f('ix_quiz_questions_id'), table_name='quiz_questions')
    op.drop_table('quiz_questions')

    # Recreate the old quiz_questions association table
    op.create_table('quiz_questions',
    sa.Column('quiz_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('pyq_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['pyq_id'], ['pyqs.id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], ),
    sa.PrimaryKeyConstraint('quiz_id', 'pyq_id')
    )
    # ### end Alembic commands ###
